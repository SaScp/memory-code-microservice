networks:
    app-network:
        driver: bridge
services:
  rabbitmq:
    image: rabbitmq:latest
    container_name: memoryCode-RabbitMQ
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    ports:
      - 5672:5672
    networks:
      - app-network
  rabbitmq-mgmt:
    image: rabbitmq:management
    container_name: memoryCode-RabbitMQ-Mgmt
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    ports:
      - 15672:15672
    networks:
      - app-network
  db_pg:
    image: postgres:15
    container_name: memoryCode-postgres
    networks:
      - app-network
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - 5433:5432
  discovery-service:
    image: alexscorp/alexrep:s2
    container_name: memoryCode-discovery-service
    networks:
      - app-network
    env_file:
      - .env
    ports:
      - 8761:8761
  user-service:
    image: alexscorp/alexrep:s3
    container_name: memoryCode-user-service
    networks:
      - app-network
    depends_on:
      - discovery-service
      - db_pg
    env_file:
      - .env
    ports:
      - 8109:8109
  yandexgpt-service:
    container_name: memoryCode-yandexgpt-service
    image: alexscorp/alexrep:s4
    networks:
      - app-network
    depends_on:
      - discovery-service
    env_file:
      - .env
    ports:
      - 8101:8101
  memories-service:
    container_name: memoryCode-memories-service
    networks:
      - app-network
    depends_on:
      - discovery-service
    env_file:
      - .env
    ports:
      - 8000:8000
    restart: always
    build: .
    command: sh -c "python main.py"